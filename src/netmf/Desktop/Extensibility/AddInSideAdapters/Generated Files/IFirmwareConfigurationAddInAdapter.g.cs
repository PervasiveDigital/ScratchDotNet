//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PervasiveDigital.Scratch.DeploymentHelper.Extensibility.AddInSideAdapters
{
    
    public class IFirmwareConfigurationAddInAdapter
    {
        internal static PervasiveDigital.Scratch.DeploymentHelper.Extensibility.IFirmwareConfiguration ContractToViewAdapter(PervasiveDigital.Scratch.DeploymentHelper.Extensibility.Contracts.IFirmwareConfigurationContract contract)
        {
            if ((contract == null))
            {
                return null;
            }
            if (((System.Runtime.Remoting.RemotingServices.IsObjectOutOfAppDomain(contract) != true) 
                        && contract.GetType().Equals(typeof(IFirmwareConfigurationViewToContractAddInAdapter))))
            {
                return ((IFirmwareConfigurationViewToContractAddInAdapter)(contract)).GetSourceView();
            }
            else
            {
                return new IFirmwareConfigurationContractToViewAddInAdapter(contract);
            }
        }
        internal static PervasiveDigital.Scratch.DeploymentHelper.Extensibility.Contracts.IFirmwareConfigurationContract ViewToContractAdapter(PervasiveDigital.Scratch.DeploymentHelper.Extensibility.IFirmwareConfiguration view)
        {
            if ((view == null))
            {
                return null;
            }
            if (view.GetType().Equals(typeof(IFirmwareConfigurationContractToViewAddInAdapter)))
            {
                return ((IFirmwareConfigurationContractToViewAddInAdapter)(view)).GetSourceContract();
            }
            else
            {
                return new IFirmwareConfigurationViewToContractAddInAdapter(view);
            }
        }
    }
}

