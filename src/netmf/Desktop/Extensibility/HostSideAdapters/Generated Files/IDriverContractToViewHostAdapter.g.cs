//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PervasiveDigital.Scratch.DeploymentHelper.Extensibility.HostSideAdapters
{
    
    [System.AddIn.Pipeline.HostAdapterAttribute()]
    public class IDriverContractToViewHostAdapter : PervasiveDigital.Scratch.DeploymentHelper.Extensibility.IDriver
    {
        private PervasiveDigital.Scratch.DeploymentHelper.Extensibility.Contracts.IDriverContract _contract;
        private System.AddIn.Pipeline.ContractHandle _handle;
        static IDriverContractToViewHostAdapter()
        {
        }
        public IDriverContractToViewHostAdapter(PervasiveDigital.Scratch.DeploymentHelper.Extensibility.Contracts.IDriverContract contract)
        {
            _contract = contract;
            _handle = new System.AddIn.Pipeline.ContractHandle(contract);
        }
        public void Start(PervasiveDigital.Scratch.DeploymentHelper.Extensibility.IFirmataEngine firmataEngine)
        {
            _contract.Start(PervasiveDigital.Scratch.DeploymentHelper.Extensibility.HostSideAdapters.IFirmataEngineHostAdapter.ViewToContractAdapter(firmataEngine));
        }
        public void Stop()
        {
            _contract.Stop();
        }
        public System.Collections.Generic.Dictionary<string, string> GetSensorValues()
        {
            return _contract.GetSensorValues();
        }
        internal PervasiveDigital.Scratch.DeploymentHelper.Extensibility.Contracts.IDriverContract GetSourceContract()
        {
            return _contract;
        }
    }
}

